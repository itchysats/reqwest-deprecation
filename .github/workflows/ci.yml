name: CI

on:
  pull_request:
  push:
  schedule:
    - cron: "0 20 * * *"

env:
  CARGO_INCREMENTAL: 0

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dprint/check@v2.0

  clippy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ stable, beta, nightly ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
          components: clippy
      - uses: Swatinem/rust-cache@v2.0.0
      - run: cargo clippy --all-targets -- -D warnings

  lint-commits:
    runs-on: ubuntu-latest
    if: github.event.ref != 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get all commits on current master
        run: git fetch origin master
      - name: Log all commits we will analyze
        run: git log --pretty=format:%s origin/master..HEAD
      - name: Disallow fixup! commits
        run: git log --pretty=format:%s origin/master..HEAD | grep -zv fixup!
      - name: Disallow squash! commits
        run: git log --pretty=format:%s origin/master..HEAD | grep -zv squash!

  test:
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        rust: [ stable, beta, nightly ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
      - uses: Swatinem/rust-cache@v2.0.0
      - run: cargo test --workspace
